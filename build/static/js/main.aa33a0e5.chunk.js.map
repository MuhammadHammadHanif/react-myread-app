{"version":3,"sources":["components/Book.js","BooksAPI.js","components/SearchBooks.js","components/BookLists.js","components/BookShelf.js","components/ShelvesWrapper.js","routes/AppRouter.js","App.js","index.js"],"names":["Book","state","selectionValue","undefined","_this","props","category","react_default","a","createElement","className","style","width","height","backgroundImage","concat","this","image","onChange","onSelectCategory","value","bookTitle","author","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","search","query","books","SearchBooks","searchBooks","error","onChangeValue","event","_event$target","target","name","setState","defineProperty","AddBook","storingBook","_this2","Link","to","type","placeholder","autoComplete","map","searchBook","components_Book","key","title","authors","imageLinks","thumbnail","storedBooks","storeBook","filter","specificbook","BookLists","changeBookShelfCategory","assign","BookShelf","Books","length","components_BookLists","ShelvesWrapper","components_BookShelf","AppRouter","allBooks","showSearchPage","bookData","deleteBook","removeIndex","item","indexOf","splice","prevState","toConsumableArray","_this3","BrowserRouter","Switch","Route","path","render","components_ShelvesWrapper","exact","components_SearchBooks","App","routes_AppRouter","React","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa33a0e5.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass  Book extends Component {\r\n    state= {\r\n        // check if category is undefined then return none\r\n        selectionValue:  this.props.category === undefined ? 'none' : this.props.category\r\n    }\r\n    render(){\r\n        return(\r\n            <li>\r\n                <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${this.props.image}\")` }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                    <select \r\n                        onChange={this.props.onSelectCategory} \r\n                        value={this.state.selectionValue}\r\n                    >\r\n                        <option value=\"move\">Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{this.props.bookTitle}</div>\r\n                <div className=\"book-authors\">{this.props.author}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n  .then(data => data)\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\r\nimport Book from './Book'\r\nimport {search, update} from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nclass  SearchBooks extends Component {\r\n    state= {\r\n        query: '',\r\n        searchBooks: [],\r\n        error: ''\r\n      }\r\n    \r\n    // activate when value change in textbox \r\n    onChangeValue = (event) => {\r\n      const {name, value} = event.target\r\n      // setting state to make input controlled component\r\n      this.setState(() => ({\r\n        [name]: value\r\n      }))\r\n      // using method from bookAPI to search book and storing in state\r\n      search(event.target.value).then((searchBooks) => {\r\n        this.setState({searchBooks})\r\n      })\r\n    }\r\n\r\n    // used to save books to homepage\r\n    AddBook = (book,category) => {\r\n      // using method from bookAPI to update book and its category \r\n      update(book,category)\r\n      // method for storing book and category in the main state (method is from parent component)\r\n      this.props.storingBook(book,category)\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n\r\n            {/* Link for using routing */}\r\n              <Link to=\"/\">\r\n                  <button className=\"close-search\">Close</button>\r\n              </Link>\r\n              \r\n              <div className=\"search-books-input-wrapper\">\r\n                <input \r\n                 type=\"text\" \r\n                 placeholder=\"Search by title or author\"\r\n                 value={this.state.query}\r\n                 name=\"query\"\r\n                 onChange= {this.onChangeValue}\r\n                 autoComplete=\"off\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n            {/* For showing Error */}\r\n            {this.state.error && <p>{this.state.error}</p>}\r\n              <ol className=\"books-grid\">\r\n               {/* To display the search books */}\r\n               { \r\n                this.state.searchBooks !== undefined \r\n                ? this.state.searchBooks.map(searchBook => \r\n                  <Book \r\n                    id={searchBook.id}\r\n                    key={searchBook.id}\r\n                    bookTitle={searchBook.title} \r\n                    author={searchBook.authors} \r\n                    image={searchBook.imageLinks.thumbnail}\r\n                    category={this.props.storedBooks.map(storeBook => storeBook.id === searchBook.id ? storeBook.shelf : 'none').filter(specificbook => specificbook!==\"none\")[0]}\r\n                    onSelectCategory={(event) => this.AddBook(searchBook,event.target.value)}\r\n                  />\r\n                ) \r\n                : 'No Book Found'\r\n               }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SearchBooks","import React, {Component} from 'react'\r\nimport Book from './Book'\r\nimport {update} from '../BooksAPI'\r\n\r\nclass BookLists extends Component {\r\n    \r\n    // for updateing book shelf category with BOOKAPI update method\r\n    onSelectCategory = (event) => {\r\n        const {value} = event.target;\r\n        this.setState(() => ({selectionValue: value}))\r\n        update(this.props, value)\r\n        // changing main state shelf type as well for the selected book\r\n        this.props.changeBookShelfCategory(this.props.id, value)\r\n    }\r\n    render(){\r\n        return(\r\n            <Book {...this.props} onSelectCategory={this.onSelectCategory}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookLists","import React from 'react'\r\nimport BookLists from './BookLists'\r\n\r\nconst BookShelf = (props) => {\r\n    return(\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                {/* For showing data on dashboard based on their categories */}\r\n                <ol className=\"books-grid\">\r\n                {\r\n                    props.Books.filter(book => book.shelf === props.category).length > 0 \r\n                    ? props.Books.filter(book => book.shelf === props.category).map(data =>  \r\n                        <BookLists \r\n                            id={data.id}\r\n                            key={data.id}\r\n                            bookTitle={data.title} \r\n                            author={data.authors} \r\n                            image={data.imageLinks.thumbnail}\r\n                            category={data.shelf}\r\n                            {...props}\r\n                        />\r\n                        ) \r\n                    : <p>No Books</p>\r\n                }\r\n                </ol>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default BookShelf","import React from \"react\";\r\nimport BookShelf from './BookShelf'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ShelvesWrapper = (props) => {  \r\n    return(\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  {/* 3 instance of BookShelf component for showing 3 categories on dashboard */}\r\n                  <BookShelf title=\"Currently Reading\" category='currentlyReading' {...props}/>\r\n                  <BookShelf title=\"Want to Read\" category='wantToRead' {...props}/>\r\n                  <BookShelf title=\"Read\" category='read' {...props}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                {/* For navigation to Search books page */}\r\n                <Link to=\"/search-books\">\r\n                  <button>Add a book</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ShelvesWrapper","import React, {Component} from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport SearchBooks from '../components/SearchBooks'\r\nimport ShelvesWrapper from '../components/ShelvesWrapper'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport '../App.css'\r\n\r\nclass AppRouter extends Component {\r\n    state = {\r\n        allBooks: [],\r\n        showSearchPage: false\r\n      }\r\n\r\n      // for changing shelf type for book on dashboard\r\n      changeBookShelfCategory = (id, category) => {\r\n        const bookData = this.state.allBooks\r\n         bookData.map((book) => {\r\n          if(book.id === id)\r\n          {\r\n            book.shelf=category\r\n            this.setState({\r\n              allBooks:bookData \r\n            })\r\n          }\r\n         }\r\n        )\r\n      }\r\n\r\n      // deleting duplicate book from main state\r\n      deleteBook = (book) => {\r\n        const bookData = this.state.allBooks \r\n        var removeIndex = bookData.map(function(item) { return item.id; }).indexOf(book.id);\r\n        bookData.splice(removeIndex, 1);\r\n        this.setState({\r\n          allBooks:bookData \r\n        })\r\n      }\r\n      // for storing book from search page in main state\r\n      storingBook = (book,category) =>{\r\n        // first delete the book if present\r\n        this.deleteBook(book)\r\n        // then set the shelf property on new book object coming from (search book page)\r\n        book.shelf=category\r\n        // then insert into state\r\n        this.setState(prevState => ({\r\n          allBooks: [...prevState.allBooks, book]\r\n        }))\r\n      }\r\n\r\n      // to store data in state on component mount from BookApi with getall() method\r\n      componentDidMount(){\r\n        BooksAPI.getAll().then((allBooks) => {\r\n          this.setState({allBooks})\r\n        })\r\n      }\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/\" \r\n                        render={()=><ShelvesWrapper \r\n                        Books={this.state.allBooks} \r\n                        changeBookShelfCategory={this.changeBookShelfCategory} />} \r\n                        exact={true} \r\n                    />\r\n                    <Route \r\n                        path=\"/search-books\" \r\n                        render={() => <SearchBooks \r\n                        storedBooks = {this.state.allBooks}\r\n                        storingBook={this.storingBook} />}  \r\n                    />\r\n                </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react'\nimport './App.css'\nimport AppRouter from './routes/AppRouter'\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <AppRouter />\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}