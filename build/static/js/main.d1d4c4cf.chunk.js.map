{"version":3,"sources":["components/Book.js","BooksAPI.js","components/SearchBooks.js","components/BookLists.js","components/BookShelf.js","components/ShelvesWrapper.js","routes/AppRouter.js","App.js","index.js"],"names":["Book","state","selectionValue","_this","props","category","react_default","a","createElement","className","style","width","height","backgroundImage","concat","this","image","onChange","onSelectCategory","value","bookTitle","author","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","search","query","books","SearchBooks","searchBook","selectedCategory","event","_event$target","target","name","setState","defineProperty","onAddBook","_this2","Link","to","type","placeholder","autoComplete","undefined","map","components_Book","key","title","authors","imageLinks","thumbnail","BookLists","onSelectCategoryAction","assign","BookShelf","Books","filter","length","components_BookLists","ShelvesWrapper","components_BookShelf","AppRouter","allBooks","showSearchPage","onShowSearchPage","bookData","prevState","toConsumableArray","_this3","BrowserRouter","Switch","Route","path","render","components_ShelvesWrapper","exact","components_SearchBooks","App","routes_AppRouter","React","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d1d4c4cf.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass  Book extends Component {\r\n    state= {\r\n        selectionValue: this.props.category\r\n    }\r\n    render(){\r\n        return(\r\n            <li>\r\n                <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${this.props.image}\")` }}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                    <select \r\n                        onChange={this.props.onSelectCategory} \r\n                        value={this.state.selectionValue}\r\n                    >\r\n                        <option value=\"move\">Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{this.props.bookTitle}</div>\r\n                <div className=\"book-authors\">{this.props.author}</div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n  .then(data => data)\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\r\nimport Book from './Book'\r\nimport {search} from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nclass  SearchBooks extends Component {\r\n    state= {\r\n        query: '',\r\n        searchBook: [],\r\n        selectedCategory: ''\r\n      }\r\n    \r\n    onChange = (event) => {\r\n      const {name, value} = event.target\r\n      this.setState(() => ({\r\n        [name]: value\r\n      }))\r\n      search(event.target.value).then((searchBook) => {\r\n        this.setState({searchBook})\r\n      })\r\n    }\r\n    // componentDidMount(){\r\n    //   search(this.state.query).then((searchBook) => {\r\n    //     this.setState({searchBook})\r\n    //   })\r\n    // }\r\n    onAddBook = (event,book,category) => {\r\n      const {value}= event.target\r\n      this.setState(() => ({\r\n        selectedCategory: value\r\n      }))\r\n      this.props.onAddBook(book,category)\r\n    }\r\n    render(){\r\n      return(\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to=\"/\">\r\n                  <button className=\"close-search\">Close</button>\r\n              </Link>\r\n              \r\n              <div className=\"search-books-input-wrapper\">\r\n                <input \r\n                 type=\"text\" \r\n                 placeholder=\"Search by title or author\"\r\n                 value={this.state.query}\r\n                 name=\"query\"\r\n                 onChange= {this.onChange}\r\n                 autoComplete=\"off\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                \r\n              <ol className=\"books-grid\">\r\n               { \r\n                this.state.searchBook !== undefined \r\n                ? this.state.searchBook.map(book => \r\n                  <Book \r\n                    id={book.id}\r\n                    key={book.id}\r\n                    bookTitle={book.title} \r\n                    author={book.authors} \r\n                    image={book.imageLinks.thumbnail}\r\n                    category={this.state.selectedCategory}\r\n                    onSelectCategory={(event) => this.onAddBook(event,book,event.target.value)}\r\n                  />\r\n                ) \r\n                : 'No Book Found'\r\n               }\r\n              </ol>\r\n            </div>\r\n          </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SearchBooks","import React, {Component} from 'react'\r\nimport Book from './Book'\r\nimport {update} from '../BooksAPI'\r\n\r\nclass BookLists extends Component {\r\n    \r\n    onSelectCategory = (event) => {\r\n        const {value} = event.target;\r\n        this.setState(() => ({selectionValue: value}))\r\n        update(this.props, value)\r\n        this.props.onSelectCategoryAction(this.props.id, value)\r\n    }\r\n    render(){\r\n        return(\r\n            <Book {...this.props} onSelectCategory={this.onSelectCategory}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookLists","import React from 'react'\r\nimport BookLists from './BookLists'\r\n\r\nconst BookShelf = (props) => {\r\n    return(\r\n\r\n        <div>\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n            {\r\n                props.Books.filter(book => book.shelf === props.category).length > 0 \r\n                ? props.Books.filter(book => book.shelf === props.category).map(data =>  \r\n                    <BookLists \r\n                        id={data.id}\r\n                        key={data.id}\r\n                        bookTitle={data.title} \r\n                        author={data.authors} \r\n                        image={data.imageLinks.thumbnail}\r\n                        category={data.shelf}\r\n                        {...props}\r\n                    />\r\n                    ) \r\n                : <p>No Books</p>\r\n                \r\n            }\r\n            </ol>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookShelf","import React from \"react\";\r\nimport BookShelf from './BookShelf'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ShelvesWrapper = (props) => {  \r\n    return(\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  <BookShelf title=\"Currently Reading\" category='currentlyReading' {...props}/>\r\n                  <BookShelf title=\"Want to Read\" category='wantToRead' {...props}/>\r\n                  <BookShelf title=\"Read\" category='read' {...props}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                <Link to=\"/search-books\">\r\n                  <button>Add a book</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ShelvesWrapper","import React, {Component} from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport SearchBooks from '../components/SearchBooks'\r\nimport ShelvesWrapper from '../components/ShelvesWrapper'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport '../App.css'\r\n\r\nclass AppRouter extends Component {\r\n    state = {\r\n        allBooks: [],\r\n        showSearchPage: false\r\n      }\r\n    \r\n      onShowSearchPage = (showSearchPage) => {\r\n        this.setState({ showSearchPage })\r\n      }\r\n      onSelectCategoryAction = (id, category) => {\r\n        let bookData = this.state.allBooks\r\n         bookData.map((book) => {\r\n          if(book.id === id)\r\n          {\r\n           book.shelf=category\r\n           this.setState({\r\n            allBooks:bookData \r\n          })\r\n          }\r\n        }\r\n        )\r\n      }\r\n      onAddBook = (book,category) =>{\r\n        book.shelf=category\r\n        this.setState(prevState => ({\r\n          allBooks: [...prevState.allBooks, book]\r\n        }))\r\n      }\r\n      componentDidMount(){\r\n        BooksAPI.getAll().then((allBooks) => {\r\n          this.setState({allBooks})\r\n        })\r\n      }\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/\" \r\n                        render={()=><ShelvesWrapper \r\n                        showSearchPage={this.onShowSearchPage} \r\n                        Books={this.state.allBooks} \r\n                        onSelectCategoryAction={this.onSelectCategoryAction} />} \r\n                        exact={true} \r\n                    />\r\n                    <Route \r\n                        path=\"/search-books\" \r\n                        render={() => <SearchBooks \r\n                        showSearchPage={this.onShowSearchPage} \r\n                        books = {this.state.allBooks}\r\n                        onAddBook={this.onAddBook} />}  \r\n                    />\r\n                </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react'\nimport './App.css'\nimport AppRouter from './routes/AppRouter'\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <AppRouter />\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}